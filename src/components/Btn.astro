---
/**
 * ボタン
 */
interface Props {
    href: string;
    addClass?: string|string[];
}

const { href, addClass = '' } = Astro.props;

// hrefにhttpが含まれているかチェック
const isExternalLink = href.includes('http');

---
<a href={href} class:list={['btn', addClass]} target={isExternalLink ? '_blank' : undefined} rel={isExternalLink ? 'noopener noreferrer' : undefined}>
    <slot />
</a>


<style lang="scss">
.btn {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: 300px;
    width: fit-content;
    padding: 0 3em 0 2em;
    height: 50px;
    border: 1px solid g.$color_base;

    &::before {
        @include g.arrow(right, 10px, 2px, g.$color_base);
        content: '';
        position: absolute;
        top: 0;
        right: 20px;
        bottom: 0;
        margin: auto;
        transition: border-color 0.3s ease;
    }

    &:hover {
        color: g.$color_white;
        background-color: g.$color_key;
        border-color: g.$color_key;
        opacity: 1;

        &::before {
            border-color: g.$color_white;
        }
    }

    &[target="_blank"],
    &[href^="mailto"] {
        &::before {
            content: none;
        }

        &::after {
            content: '';
            position: absolute;
            top: 0;
            right: 10px;
            bottom: 0;
            margin: auto;
            aspect-ratio: 1;
            filter: g.$svg_color_base;
            transition: filter 0.3s ease;
        }

        &:hover {
            &::after {
                filter: g.$svg_color_white;
            }
        }
    }

    &[target="_blank"] {
        &::after {
            width: 30px;
            background: url('/img/common/icon_tab.svg') no-repeat border-box center/contain;
        }

    }

    &[href^="mailto"] {
        &::after {
            width: 25px;
            background: url('/img/common/icon_mail.svg') no-repeat border-box center/contain;
        }
    }
}
</style>
